### KARATE

## bin
- npm run prod
- npm run dev
- ./vendor/bin/phpunit tests
- ./node_modules/.bin/mjml --watch mail.mjml
- php -S localhost:8000 -t public
- ./bin/mailpit

**Github**
Après le ssh, On crée un nouveau Repository, on aura le chemin du repère :
- git remote add origin git@github.com:Adama100/App.git : Obtenu sur github, mais il est executer dans le dossier Remote
- git push -u origin master : Permettra d'envoyer vers le github

- git remote add origin git@github.com:Adama100/Karate.git
- git branch -M main
- git push -u origin main

- git remote add origin <ssh> ou <chemin_dossier_remote> : Permet de rajouter un remote, mais on le fait dans notre projet
- git remote -v : La liste des remotes
- git branch -r : L'ensemble des branches qui sont disponible a distance
- git branch -d master : Supprime la branche dans notre remote
- git push origin main : Pour envoyer mes modifications a distance
- git push origin --delete master : Supprime la branche a distance
- git pull origin main : Permet de recupérer les nouveau commit qui ont été fais sur le remote origin et sur la branche main
- git clone <chemin_du_remote:ssh> <nom_du_chemin_ou_cloner> : Pour cloner un dépot
- git pull --rebase origin master : Recupère les nouveau commit qui ont été fais sur le remote origin et sur la branche master, le rebase donne une syntaxe plus propre .. Va mettre le commit précédent ensuite mettre le notre sinon fera un système de branch ou ça parle de merge ..
- git clone <chemin_du_remote> <nom_du_chemin_ou_cloner> --depth 1 : Permet de recuperer une profondeur dans l'historique, le nombre de commit qu'il va récupérer

**Les Fonctions d'agregats**
- avg() -- Permet de faire une moyenne
- count() -- Permet de compter le nombre d'éléments que l'on a, count(*) nous les enregistrement même celle qui sont null
- max() -- Permet de récupérer la valeur maximale que l'on a
- min() -- Permet de récupérer la valeur minimale que l'on a
- sum() -- Permet de faire une somme
- total() -- Permet de faire une somme, mais va utiliser un système avec les virgules
- CONCAT() -- Permet de concatener Ex : SELECT CONCAT(nom, ' ', prenom) 


## Fonctionnalités principales du système

- Les pratiquants peuvent s’abonner à un club pour devenir membre affilié. Possibilité pour un maître de club de gérer les membres affiliés à son club.
- Chaque pratiquant affilié reçoit un matricule unique (généré automatiquement). Le matricule est lié à l’affiliation et sert de preuve d’officialisation.
- Différenciation des rôles : pratiquants normaux et maîtres de clubs. Les maîtres de clubs peuvent approuver ou refuser des affiliations.
- Ajout de nouveaux clubs : Les maîtres de clubs peuvent ajouter leur club
- Modification des informations d’un club : Les maîtres de clubs peuvent modifier les informations de leur propre club